{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/repos/ai-sales-table/frontend/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,4NAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,yLAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/repos/ai-sales-table/frontend/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,sBAAQ,6RAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QAAI,WAAU;kBACb,cAAA,4TAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,6RAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,6RAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,yBAAW,6RAAM,UAAU,OAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,6RAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,6RAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/repos/ai-sales-table/frontend/src/lib/api.ts"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000';\nconst WS_BASE_URL = 'ws://localhost:8000';\n\nexport interface Column {\n  id?: string;\n  name: string;\n  extraction_key?: string;  // Optional since it's generated server-side\n}\n\nexport interface Row {\n  id: string;\n  website: string;\n  data: Record<string, string | number | boolean | null>;\n}\n\nexport interface GridData {\n  columns: Column[];\n  rows: Row[];\n}\n\nexport interface WebSocketMessage {\n  type: 'update' | 'error';\n  data?: GridData;\n  error?: string;\n}\n\nexport const api = {\n  async getData(): Promise<GridData> {\n    const response = await fetch(`${API_BASE_URL}/api/data`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n    return response.json();\n  },\n\n  async addColumn(name: string): Promise<void> {\n    const response = await fetch(`${API_BASE_URL}/api/columns`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name }),\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add column');\n    }\n  },\n\n  async addRow(website: string): Promise<void> {\n    console.log('Attempting to add row with website:', website);\n    const response = await fetch(`${API_BASE_URL}/api/rows`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ website }),\n    });\n    console.log('Add row response:', response);\n    if (!response.ok) {\n      throw new Error('Failed to add row');\n    }\n  },\n\n  async clearColumns(): Promise<void> {\n    const response = await fetch(`${API_BASE_URL}/api/columns`, {\n      method: 'DELETE',\n    });\n    if (!response.ok) {\n      throw new Error('Failed to clear columns');\n    }\n  },\n\n  async refreshData(): Promise<void> {\n    const response = await fetch(`${API_BASE_URL}/api/refresh`, {\n      method: 'POST',\n    });\n    if (!response.ok) {\n      throw new Error('Failed to refresh data');\n    }\n  }\n};\n\nexport class WebSocketClient {\n  private ws: WebSocket | null = null;\n  private reconnectTimeoutId: number | null = null;\n\n  constructor(private onMessage: (data: WebSocketMessage) => void) {}\n\n  connect() {\n    if (this.ws) return;\n\n    this.ws = new WebSocket(`${WS_BASE_URL}/ws/updates`);\n\n    this.ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data) as WebSocketMessage;\n        this.onMessage(data);\n      } catch (error) {\n        console.error('Failed to parse WebSocket message:', error);\n      }\n    };\n\n    this.ws.onclose = () => {\n      this.ws = null;\n      this.scheduleReconnect();\n    };\n\n    this.ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n      this.ws?.close();\n    };\n  }\n\n  private scheduleReconnect() {\n    if (this.reconnectTimeoutId) return;\n    this.reconnectTimeoutId = window.setTimeout(() => {\n      this.reconnectTimeoutId = null;\n      this.connect();\n    }, 5000);\n  }\n\n  disconnect() {\n    if (this.reconnectTimeoutId) {\n      window.clearTimeout(this.reconnectTimeoutId);\n      this.reconnectTimeoutId = null;\n    }\n    this.ws?.close();\n    this.ws = null;\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,MAAM,eAAe;AACrB,MAAM,cAAc;AAyBb,MAAM,MAAM;IACjB,MAAM;QACJ,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,SAAS,CAAC;QACvD,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,WAAU,IAAY;QAC1B,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,YAAY,CAAC,EAAE;YAC1D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAK;QAC9B;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM,QAAO,OAAe;QAC1B,QAAQ,GAAG,CAAC,uCAAuC;QACnD,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,SAAS,CAAC,EAAE;YACvD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAQ;QACjC;QACA,QAAQ,GAAG,CAAC,qBAAqB;QACjC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM;QACJ,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,YAAY,CAAC,EAAE;YAC1D,QAAQ;QACV;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM;QACJ,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,YAAY,CAAC,EAAE;YAC1D,QAAQ;QACV;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;IACF;AACF;AAEO,MAAM;;IACH,GAA4B;IAC5B,mBAAyC;IAEjD,YAAY,AAAQ,SAA2C,CAAE;aAA7C,YAAA;aAHZ,KAAuB;aACvB,qBAAoC;IAEsB;IAElE,UAAU;QACR,IAAI,IAAI,CAAC,EAAE,EAAE;QAEb,IAAI,CAAC,EAAE,GAAG,IAAI,UAAU,GAAG,YAAY,WAAW,CAAC;QAEnD,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,CAAC;YACnB,IAAI;gBACF,MAAM,OAAO,KAAK,KAAK,CAAC,MAAM,IAAI;gBAClC,IAAI,CAAC,SAAS,CAAC;YACjB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,sCAAsC;YACtD;QACF;QAEA,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG;YAChB,IAAI,CAAC,EAAE,GAAG;YACV,IAAI,CAAC,iBAAiB;QACxB;QAEA,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,CAAC;YACjB,QAAQ,KAAK,CAAC,oBAAoB;YAClC,IAAI,CAAC,EAAE,EAAE;QACX;IACF;IAEQ,oBAAoB;QAC1B,IAAI,IAAI,CAAC,kBAAkB,EAAE;QAC7B,IAAI,CAAC,kBAAkB,GAAG,OAAO,UAAU,CAAC;YAC1C,IAAI,CAAC,kBAAkB,GAAG;YAC1B,IAAI,CAAC,OAAO;QACd,GAAG;IACL;IAEA,aAAa;QACX,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,OAAO,YAAY,CAAC,IAAI,CAAC,kBAAkB;YAC3C,IAAI,CAAC,kBAAkB,GAAG;QAC5B;QACA,IAAI,CAAC,EAAE,EAAE;QACT,IAAI,CAAC,EAAE,GAAG;IACZ;AACF"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/repos/ai-sales-table/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,iBAAiB,CAAA,GAAA,8OAAA,CAAA,MAAG,AAAD,EACvB,uOACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,6RAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,uSAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,4TAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/repos/ai-sales-table/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,6RAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,4TAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/repos/ai-sales-table/frontend/src/components/data-grid.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { api, type Column, type Row, WebSocketClient } from \"@/lib/api\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\n\nexport function DataGrid() {\n  const [columns, setColumns] = useState<Column[]>([])\n  const [rows, setRows] = useState<Row[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [website, setWebsite] = useState(\"\")\n  const [addingWebsite, setAddingWebsite] = useState(false)\n  const [wsConnected, setWsConnected] = useState(false)\n\n  const loadData = async () => {\n    try {\n      const data = await api.getData()\n      const uniqueColumns = Array.from(\n        new Map(data.columns.map((col: Column) => [col.name, col])).values()\n      )\n      setColumns(uniqueColumns)\n      setRows(data.rows)\n      setError(null)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Failed to load data\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const ws = React.useRef<WebSocketClient | null>(null);\n\n  useEffect(() => {\n    ws.current = new WebSocketClient((data: { type: string }) => {\n      if (data.type === \"update\") {\n        loadData();\n      }\n    });\n\n    ws.current.connect();\n    setWsConnected(true);\n\n    return () => {\n      ws.current?.disconnect();\n    }\n  }, []);\n\n  const handleAddWebsite = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setAddingWebsite(true)\n    setError(null)\n\n    try {\n      if (website.trim()) {\n        await api.addRow(website.trim())\n        // Remove loadData() call since we'll get updates via WebSocket\n        setWebsite(\"\")\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Failed to add website\")\n    } finally {\n      setAddingWebsite(false)\n    }\n  }\n\n  if (loading) {\n    return <div className=\"p-8 text-center\">Loading...</div>\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-8 text-center\">\n        <p className=\"text-red-500 mb-4\">{error}</p>\n        <Button onClick={loadData}>Retry</Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <form onSubmit={handleAddWebsite} className=\"space-y-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex-1\">\n            <label htmlFor=\"website\" className=\"block text-sm font-medium mb-2\">\n              Website URL\n            </label>\n            <div className=\"flex gap-2\">\n              <Input\n                id=\"website\"\n                type=\"url\"\n                value={website}\n                onChange={(e) => setWebsite(e.target.value)}\n                placeholder=\"e.g., www.kamiwaza.ai\"\n                required\n              />\n              <Button type=\"submit\" disabled={addingWebsite}>\n                {addingWebsite ? \"Adding...\" : \"Add Website\"}\n              </Button>\n            </div>\n          </div>\n          <div className=\"flex gap-2\">\n            <Button\n              type=\"button\"\n              onClick={() => api.refreshData()}\n              disabled={columns.length === 0}\n            >\n              Refresh Data\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"destructive\"\n              onClick={() => api.clearColumns()}\n              disabled={columns.length === 0}\n            >\n              Clear All Columns\n            </Button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"border rounded-lg\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Website</TableHead>\n              {columns.map((column) => (\n                <TableHead key={column.id}>{column.name}</TableHead>\n              ))}\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.website}</TableCell>\n                {columns.map((column) => (\n                  <TableCell key={`${row.id}-${column.id}`}>\n                    {row.data[column.name] || ''}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 659, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/repos/ai-sales-table/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,6RAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,6RAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,6RAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,6RAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,6RAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,6RAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 756, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 762, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/repos/ai-sales-table/frontend/src/components/column-form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { api } from \"@/lib/api\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\n\nexport function ColumnForm() {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [name, setName] = useState('')\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    setLoading(true)\n    setError(null)\n\n    try {\n      await api.addColumn(name)\n      setName('')\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Failed to add column\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Add New Column</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <label htmlFor=\"name\" className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n              Column Name\n            </label>\n            <Input\n              id=\"name\"\n              value={name}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\n              placeholder=\"e.g., Company Name, Headquarters, CEO Name\"\n              disabled={loading}\n              required\n            />\n          </div>\n          {error && (\n            <div className=\"p-3 text-sm text-destructive bg-destructive/10 rounded-md\">\n              {error}\n            </div>\n          )}\n          <Button type=\"submit\" disabled={loading} className=\"w-full\">\n            {loading ? \"Adding...\" : \"Add Column\"}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;AASO,SAAS;;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,eAAe,OAAO;QAC1B,MAAM,cAAc;QACpB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,oHAAA,CAAA,MAAG,CAAC,SAAS,CAAC;YACpB,QAAQ;QACV,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,4TAAC,mIAAA,CAAA,OAAI;;0BACH,4TAAC,mIAAA,CAAA,aAAU;0BACT,cAAA,4TAAC,mIAAA,CAAA,YAAS;8BAAC;;;;;;;;;;;0BAEb,4TAAC,mIAAA,CAAA,cAAW;0BACV,cAAA,4TAAC;oBAAK,UAAU;oBAAc,WAAU;;sCACtC,4TAAC;4BAAI,WAAU;;8CACb,4TAAC;oCAAM,SAAQ;oCAAO,WAAU;8CAA6F;;;;;;8CAG7H,4TAAC,oIAAA,CAAA,QAAK;oCACJ,IAAG;oCACH,OAAO;oCACP,UAAU,CAAC,IAA2C,QAAQ,EAAE,MAAM,CAAC,KAAK;oCAC5E,aAAY;oCACZ,UAAU;oCACV,QAAQ;;;;;;;;;;;;wBAGX,uBACC,4TAAC;4BAAI,WAAU;sCACZ;;;;;;sCAGL,4TAAC,qIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,UAAU;4BAAS,WAAU;sCAChD,UAAU,cAAc;;;;;;;;;;;;;;;;;;;;;;;AAMrC;GApDgB;KAAA"}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/repos/ai-sales-table/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { DataGrid } from \"@/components/data-grid\"\nimport { ColumnForm } from \"@/components/column-form\"\n\nexport default function Home() {\n  return (\n    <main className=\"container mx-auto py-8\">\n      <h1 className=\"mb-8 text-3xl font-bold\">Sales Research Assistant</h1>\n\n      <div className=\"mb-8\">\n        <h2 className=\"mb-4 text-xl font-semibold\">Add New Column</h2>\n        <ColumnForm />\n      </div>\n\n      <div>\n        <h2 className=\"mb-4 text-xl font-semibold\">Research Data</h2>\n        <DataGrid />\n      </div>\n    </main>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAMe,SAAS;IACtB,qBACE,4TAAC;QAAK,WAAU;;0BACd,4TAAC;gBAAG,WAAU;0BAA0B;;;;;;0BAExC,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,4TAAC,uIAAA,CAAA,aAAU;;;;;;;;;;;0BAGb,4TAAC;;kCACC,4TAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,4TAAC,qIAAA,CAAA,WAAQ;;;;;;;;;;;;;;;;;AAIjB;KAhBwB"}},
    {"offset": {"line": 974, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}